"use client"
import ScrollStack, { ScrollStackItem } from "./scrollstack"

export function Features() {
  const features = [
    {
      title: "Explore Hunts",
      points: ["Explore hunts across themes and locations", "Register or manage hunts"],
      bgColor: "bg-[#2f6f3e]", // Forest green
      textColor: "text-white",
      image: "/images/explore-hunts-mobile.png",
    },
    {
      title: "Create Team",
      points: ["Create a new team or join an existing team", "Share a QR with your friends to invite them"],
      bgColor: "bg-[#f47c06]", // Bright orange
      textColor: "text-white",
      image: "/images/create-team-mobile.png",
    },
    {
      title: "Solve Clues",
      points: [
        "Solves clues generated by AI (Gemini)",
        "Verify location to unlock next clues",
        "Upto 6 retries allowed to verify answer",
      ],
      bgColor: "bg-[#c89a3c]", // Gold
      textColor: "text-white",
      image: "/images/solve-clues-mobile.png",
    },
    {
      title: "Earn Rewards",
      points: [
        "Earn rewards upon hunt completion",
        "Rewards based on a score generated by true network",
        "Score based on completion speed and retries used",
      ],
      bgColor: "bg-[#a26a87]", // Mauve
      textColor: "text-white",
      image: "/images/earn-rewards-mobile.png",
    },
  ]

  return (
    <section id="features" className="py-14 md:py-20">
      <div className="mx-auto max-w-6xl px-4 md:px-6 mb-12">
        <h2 className="text-3xl md:text-4xl font-semibold text-center">Features</h2>
      </div>

      {/* Use window scroll so the stack pins relative to viewport */}
      <ScrollStack useWindowScroll={true} itemDistance={120} itemStackDistance={40}>
        {features.map((feature) => (
          <ScrollStackItem key={feature.title} itemClassName={`${feature.bgColor} ${feature.textColor} h-screen`}>
            <div className="flex items-center justify-between h-full gap-8">
              {/* Left side: Feature name and points */}
              <div className="flex-1">
                <h3 className="text-2xl md:text-3xl font-bold mb-6">{feature.title}</h3>
                <ul className="space-y-3">
                  {feature.points.map((point, i) => (
                    <li key={i} className="flex items-start gap-3">
                      <span className="text-lg mt-1">â€¢</span>
                      <span className="text-base md:text-lg">{point}</span>
                    </li>
                  ))}
                </ul>
              </div>

              {/* Right side: Mobile image placeholder or actual image */}
              <div className="flex-1 flex justify-center">
                {feature.image ? (
                  <img
                    src={feature.image || "/placeholder.svg"}
                    alt={feature.title}
                    className="w-32 h-64 md:w-40 md:h-80 rounded-3xl object-cover shadow-lg transition-transform duration-300 hover:scale-150 hover:z-50 cursor-pointer"
                  />
                ) : (
                  <div className="w-32 h-64 md:w-40 md:h-80 bg-white/20 rounded-3xl border-2 border-white/40 flex items-center justify-center backdrop-blur-sm">
                    <div className="text-center">
                      <div className="text-white/60 text-sm">Mobile Preview</div>
                      <div className="text-white/40 text-xs mt-2">Image coming soon</div>
                    </div>
                  </div>
                )}
              </div>
            </div>
          </ScrollStackItem>
        ))}
      </ScrollStack>
    </section>
  )
}
